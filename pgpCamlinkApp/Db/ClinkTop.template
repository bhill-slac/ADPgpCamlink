#
# ClinkTop rogue PVs
#
# Required macros:
#	P				- Prefix
#	R				- Region, common camera PV prefix is $(P)$(R)
#	B				- Board number
#	L				- Lane number
# Optional macros
#	TIMEOUT			- Defaults to 1 sec
#

# AxiPcieCore
record( longin, "$(P)$(R)AxiPcieCoreScratchPad_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDev.Hardware.AxiPcieCore.AxiVersion.ScratchPad" )
	field( SCAN, "$(SCAN=10 second)" )
}
record( longout, "$(P)$(R)AxiPcieCoreScratchPad" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDev.Hardware.AxiPcieCore.AxiVersion.ScratchPad" )
	field( FLNK, "$(P)$(R)AxiPcieCoreScratchPad_RBV" )
	field( TPRO, "2" )
}


# AppEventBuilder
record( longin, "$(P)$(R)AppEventBuilder:DataCnt0" )
{
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDev.Application.AppLane[$(L)].EventBuilder.DataCnt[0]" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

# AxiPcieCore
record( longin, "$(P)$(R)AxiPcieCore:FpgaVersion" )
{
	field( DESC, "AxiPcieCore FPGA Version (show as hex)" )
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDev.Hardware.AxiPcieCore.AxiVersion.FpgaVersion" )
	field( PINI, "YES" )
	info( autosaveFields, "" )
}

record( longin, "$(P)$(R)AxiPcieCore:UpTime" )
{
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDev.Hardware.AxiPcieCore.AxiVersion.UpTimeCnt" )
	field( EGU,  "sec" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

# Timing
record( bi, "$(P)$(R)Timing:Trig0:EnableReg_RBV" )
{
	field( DTYP, "RogueBI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.Hardware.Timing.Triggering.Ch[0].EnableReg" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

#record( bo, "$(P)$(R)Timing:Trig0:EnableReg" )
#{
#	field( DTYP, "RogueBO" )
#	field( OUT,  "@B$(B) L$(L) ClinkDev.Hardware.Timing.Triggering.Ch[0].EnableReg" )
#	field( PINI, "YES" )
#	field( FLNK, "$(P)$(R)Timing:Trig0:EnableReg_RBV" )
#	field( TPRO, "2" )
#}

# Feb0
record( longin, "$(P)$(R)Feb0:FpgaVersion" )
{
	field( DESC, "FEB FPGA Version (show as hex)" )
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDev.ClinkFeb[0].AxiVersion.FpgaVersion" )
	field( PINI, "YES" )
	info( autosaveFields, "" )
}

record( longin, "$(P)$(R)Feb0:UpTime" )
{
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDev.ClinkFeb[0].AxiVersion.UpTimeCnt" )
	field( EGU, "sec" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

# TODO Use mbbi w/ enumerated baud rates
record( longin, "$(P)$(R)Feb0:ClCh0:BaudRate_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].BaudRate" )
	field( SCAN, "$(SCAN=1 second)" )
	field( EGU,  "bps" )
	info( autosaveFields, "" )
}

# TODO Use mbbo w/ enumerated baud rates
record( longout, "$(P)$(R)Feb0:ClCh0:BaudRate" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].BaudRate" )
	field( DOL,  "57600" )
	field( EGU,  "bps" )
	field( PINI, "YES" )
	field( TPRO, "2" )
	info( autosaveFields, "VAL" )
}

# TODO: Use mbbi
# 0: 'Disable', 1: 'Base', 2: 'Medium', 3: 'Full', 4: 'Deca'
record( longin, "$(P)$(R)Feb0:ClCh0:LinkMode_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].LinkMode" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

# TODO: Use mbbi
# 0: 'None', 1: '8Bit', 2: '10Bit', 3: '12Bit',
# 4: '14Bit', 5: '16Bit', 6: '24Bit', 7: '30Bit', 8: '36Bit' 
record( longin, "$(P)$(R)Feb0:ClCh0:DataMode_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].DataMode" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

# TODO: Use mbbi
# 0: 'None', 1: 'Line', 2: 'Frame'
record( longin, "$(P)$(R)Feb0:ClCh0:FrameMode_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].FrameMode" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( longin, "$(P)$(R)Feb0:ClCh0:SerThrottle_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].SerThrottle" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( longout, "$(P)$(R)Feb0:ClCh0:SerThrottle" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].SerThrottle" )
	field( DOL,  "10000" )
	field( EGU,  "usec" )
	field( PINI, "YES" )
	field( TPRO, "2" )
	info( autosaveFields, "VAL" )
}

record( longin, "$(P)$(R)Feb0:ClCh0:FrameCount" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].FrameCount" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( longin, "$(P)$(R)Feb0:Trig0:Rate" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].TrigRate" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( bi, "$(P)$(R)Feb0:Trig0:InvCC_RBV" )
{
	field( DTYP, "RogueBI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].InvCC" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

#record( bo, "$(P)$(R)Feb0:Trig0:InvCC" )
#{
#	field( DTYP, "RogueBO" )
#	field( OUT,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].InvCC" )
#	field( PINI, "YES" )
#	field( FLNK, "$(P)$(R)Feb0:Trig0:InvCC_RBV" )
#	field( TPRO, "2" )
#}

record( longin, "$(P)$(R)Feb0:Trig0:Map_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].TrigMap" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( longout, "$(P)$(R)Feb0:Trig0:Map" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].TrigMap" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)Feb0:Trig0:Map_RBV" )
	field( TPRO, "2" )
}

record( longin, "$(P)$(R)Feb0:Trig0:Mask_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].TrigMask" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( longout, "$(P)$(R)Feb0:Trig0:Mask" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].TrigMask" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)Feb0:Trig0:Mask_RBV" )
	field( TPRO, "2" )
}

record( longin, "$(P)$(R)Feb0:Trig0:PulseWidthRaw_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].TrigPulseWidthRaw" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( longout, "$(P)$(R)Feb0:Trig0:PulseWidthRaw" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[0].TrigPulseWidthRaw" )
#	field( EGU,  "usec?" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)Feb0:Trig0:PulseWidthRaw_RBV" )
	field( TPRO, "2" )
	info( autosaveFields, "VAL" )
}

record( longin, "$(P)$(R)Feb0:ClCh0:Trig1Rate" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].TrigCtrl[1].TrigRate" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( longin, "$(P)$(R)Feb0:ClCh1:FrameCount" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[1].FrameCount" )
	field( SCAN, "$(SCAN=1 second)" )
	info( autosaveFields, "" )
}

record( bi, "$(P)$(R)Feb0:ClCh0:Running" )
{
	field( DTYP, "RogueBI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[0].Running" )
	field( SCAN, "$(SCAN=1 second)" )
	field( ZNAM, "Stopped" )
	field( ONAM, "Running"  )
	info( autosaveFields, "" )
}

record( bi, "$(P)$(R)Feb0:ClCh1:Running" )
{
	field( DTYP, "RogueBI" )
	field( INP,  "@B$(B) L$(L) ClinkDev.ClinkFeb[0].ClinkTop.Ch[1].Running" )
	field( SCAN, "$(SCAN=1 second)" )
	field( ZNAM, "Stopped" )
	field( ONAM, "Running"  )
	info( autosaveFields, "" )
}
